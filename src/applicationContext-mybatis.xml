<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
            xmlns:aop="http://www.springframework.org/schema/aop"  
            xmlns:p="http://www.springframework.org/schema/p"  
            xmlns:tx="http://www.springframework.org/schema/tx"  
            xmlns:context="http://www.springframework.org/schema/context"  
            xsi:schemaLocation="   
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
                http://www.springframework.org/schema/context 
                http://www.springframework.org/schema/context/spring-context.xsd">  
                
    <context:component-scan base-package="entrepreneurialcenter.office.biz"/> <!-- 业务逻辑层的包 -->
    <context:component-scan base-package="entrepreneurialcenter.office.dao"/> <!-- 数据访问层的包 -->
    <context:annotation-config />
   	<context:property-placeholder location="classpath:database.properties"/>
    <!-- JNDI获取数据源(使用dbcp连接池) -->  
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
		    <property name="driverClassName" value="${driver}"/>
		    <property name="url" value="${url}"/>
		    <property name="username" value="${user}"/>
		    <property name="password" value="${password}"/>
		    <property name="initialSize" value="${initialSize}"/><!-- 连接池的初始连接数量 -->
			<property name="maxActive" value="${maxActive}"/>    <!-- 同时支持的最大连接数 -->
			<property name="maxIdle" value="${maxIdle}"/>        <!-- 最多同时支持的最大空闲连接数 -->
			<property name="minIdle" value="${minIdle}"/>        <!-- 最少同时支持的最大空闲连接数 -->
			<property name="maxWait" value="${maxWait}"/>        <!-- 每个连接最多等待多少毫秒 -->
			<property name="removeAbandoned" value="${removeAbandoned}"/>              <!-- 是否可以销毁超时链接 -->
			<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/><!-- 多少毫秒后销毁超时连接 -->
			<property name= "testWhileIdle" value="true"/><!-- 在连接空闲时，也不停的测试连接是否可用 -->
			<property name= "timeBetweenEvictionRunsMillis" value="60000"/><!-- 连接空闲时的测试周期（每隔1分钟测试一次 ）-->
			<property name= "testOnBorrow" value="false"/><!-- 在连接被使用之后，不再测试连接是否可用 -->
			<property name= "testOnReturn" value="false"/><!-- 在连接被归还之后，不再测试连接是否可用 -->
			<property name= "validationQuery" value="select 1"/><!-- 测试连接是否可用的语句 -->
			<property name= "numTestsPerEvictionRun" value="${maxActive}"/><!-- 同时支持的测试连接数量 -->
	 	</bean>
	 	
    <!-- 事务管理  start -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    	<property name="dataSource" ref="dataSource"/>  
 	</bean>
   
 	<!-- 配置mybatis SqlSessionFactoryBean -->
 	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
 		<property name="dataSource" ref="dataSource"/>
 		<property name="configLocation" value="classpath:mybatis-config.xml"/>
 	</bean>
 	
 	<aop:aspectj-autoproxy/>
      <aop:config proxy-target-class="true">
      	<aop:pointcut expression="execution(* *entrepreneurialcenter.office.biz..*(..))" id="transService"/><!-- 业务逻辑层的包 -->
      	<aop:advisor advice-ref="myAdvice" pointcut-ref="transService"/>
      </aop:config>
      
 	<tx:advice id="myAdvice" transaction-manager="txManager">  
    	<tx:attributes>  
	        <tx:method name="add*"  propagation="REQUIRED" rollback-for="Exception"  />   <!-- add开头的方法，添加需要事务 -->
	        <tx:method name="update*"  propagation="REQUIRED" rollback-for="Exception"  /><!-- update开头的方法，修改需要事务 -->
	         <tx:method name="del*"  propagation="REQUIRED" rollback-for="Exception"  />  <!-- del开头的方法，删除需要事务 -->
	        <tx:method name="*" /><!-- 其他方法（例如查询）则不需要事务 -->
    	</tx:attributes>  
 	</tx:advice>
    <!-- 事务管理  end -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="entrepreneurialcenter.office.dao"/><!-- 数据访问层的包 -->
    </bean>       
</beans>